// Magic: 38e2e29a
// Automatically generated PSI dialog (PSI version 17.5.425)
// Wed Apr  1 21:08:24 2020


f_tmp = FLOAT_FIELD;	// dialog.top.ui
xOrd.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

    {  }

}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    rOrd.menu;

    {  }

}
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(t.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_transform" VALUE(t.script_action)
	HELP("Select an object to match the translation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

r.gad = ROW
{
   HSTRETCH

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);
   PARM(float, 3, "r", none, none, "X,Y,Z")
	RANGE(0,360)  LABELREF(r.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_rotation" VALUE(r.script_action)
	HELP("Select an object to match the rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

s.gad = ROW
{
   HSTRETCH

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);
   PARM(float, 3, "s", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(s.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_scale" VALUE(s.script_action)
	HELP("Select an object to match the scale with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

p.gad = ROW
{
   HSTRETCH

   p.label = PARM_LABEL("Pivot Translate", "p") WIDTH(1.5);
   PARM(float, 3, "p", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(p.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot" VALUE(p.script_action)
	HELP("Select an object to match the pivot with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

pr.gad = ROW
{
   HSTRETCH

   pr.label = PARM_LABEL("Pivot Rotate", "pr") WIDTH(1.5);
   PARM(float, 3, "pr", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(pr.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot_rotation" VALUE(pr.script_action)
	HELP("Select an object to match the pivot rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

scale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

}

pre_xform.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    pre_xform.menu;
}

keeppos.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keeppos", "Keep Position When Parenting") toggle VALUE(keeppos.val);

    { HSTRETCH }

}

childcomp.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("childcomp", "Child Compensation") toggle VALUE(childcomp.val);

    { HSTRETCH }

}

constraints_on.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("constraints_on", "Enable Constraints") toggle VALUE(constraints_on.val);

    { HSTRETCH }

}

constraints_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 constraints_path.label = PARM_LABEL("Constraints", "constraints_path") WIDTH(1.5);
 PARM_FIELD(pathstring, "constraints_path") VALUE(constraints_path.val) 
	LABELREF(constraints_path.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(constraints_path.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(constraints_path.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

    ACTION_ICONBUTTON "BUTTONS_add_constraints" VALUE(constraints_path.script_action)
	HELP("")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}
lookatpath.gad = NULL { }
lookupobjpath.gad = NULL { }
lookup.gad = NULL { }
pathobjpath.gad = NULL { }
roll.gad = NULL { }
pos.gad = NULL { }
uparmtype.gad = NULL { }
pathorient.gad = NULL { }
up.gad = NULL { }
bank.gad = NULL { }
label1.gad = NULL { }
label2.gad = NULL { }
label3.gad = NULL { }
label4.gad = NULL { }
tdisplay.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val);

display.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 display.label = PARM_LABEL("Display", "display") WIDTH(1.32);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

}
}	
}	// Template join.bot


outputobj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Output Transform", "outputobj") WIDTH(1.5);
    { WIDTH(0.09) }

    outputobj.menu;

    { HSTRETCH }

}

visibleobjects.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 visibleobjects.label = PARM_LABEL("Visible Children", "visibleobjects") WIDTH(1.5);
 PARM_FIELD (pathstring, "visibleobjects") LABELREF(visibleobjects.label) 
	VALUE(visibleobjects.val) HSTRETCH;

    visibleobjects.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(visibleobjects.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

picking.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

    { HSTRETCH }

}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

    pickscript.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

caching.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

    { HSTRETCH }

}
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }
proj.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

proj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("Project", "proj") WIDTH(1.5);
    { WIDTH(0.09) }

    proj.menu;

    {  }

}

labelparm.sval := 1;

labelparm.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)

    SWITCHER tight
    {
	VALUE(labelparm.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}

add_proj.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("add_proj", "+")
	push VALUE(add_proj.val);

}

remove_proj.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("remove_proj", "-")
	push VALUE(remove_proj.val);

}

details_proj.gad = ROW
{
    JUSTIFY(left, center)

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("details_proj", "?")
	push VALUE(details_proj.val);

}
}	// Template join.bot


scene.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    scene.label = PARM_LABEL("Scene", "scene") WIDTH(1.5);
    PARM_FIELD(string, "scene") VALUE(scene.val) 
	LABELREF(scene.label) HSTRETCH;

    scene.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

proj_var.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    proj_var.label = PARM_LABEL("$PROJECT", "proj_var") WIDTH(1.5);
    PARM_FIELD(string, "proj_var") VALUE(proj_var.val) 
	LABELREF(proj_var.label) HSTRETCH;

}

code_var.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    code_var.label = PARM_LABEL("$CODE", "code_var") WIDTH(1.5);
    PARM_FIELD(string, "code_var") VALUE(code_var.val) 
	LABELREF(code_var.label) HSTRETCH;

}

fps.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    fps.label = PARM_LABEL("$PROJ_FPS", "fps") WIDTH(1.5);
    PARM_FIELD(string, "fps") VALUE(fps.val) 
	LABELREF(fps.label) HSTRETCH;

}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}

proj_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 proj_path.label = PARM_LABEL("$PROJECT_PATH", "proj_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "proj_path") LABELREF(proj_path.label)
	VALUE(proj_path.val) HSTRETCH;

    proj_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(proj_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scenes_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 scenes_path.label = PARM_LABEL("$SCENES_PATH", "scenes_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "scenes_path") LABELREF(scenes_path.label)
	VALUE(scenes_path.val) HSTRETCH;

    scenes_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(scenes_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

hda_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 hda_path.label = PARM_LABEL("$HDA_PATH", "hda_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "hda_path") LABELREF(hda_path.label)
	VALUE(hda_path.val) HSTRETCH;

    hda_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(hda_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scripts_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 scripts_path.label = PARM_LABEL("$SCRIPTS_PATH", "scripts_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "scripts_path") LABELREF(scripts_path.label)
	VALUE(scripts_path.val) HSTRETCH;

    scripts_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(scripts_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scene_var.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    scene_var.label = PARM_LABEL("$SCENE", "scene_var") WIDTH(1.5);
    PARM_FIELD(string, "scene_var") VALUE(scene_var.val) 
	LABELREF(scene_var.label) HSTRETCH;

}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH 

    { HEIGHT(0.1) }
    SEPARATOR; 
    { HEIGHT(0.1) }
}

scene_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 scene_path.label = PARM_LABEL("$SCENE_PATH", "scene_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "scene_path") LABELREF(scene_path.label)
	VALUE(scene_path.val) HSTRETCH;

    scene_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(scene_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

save_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 save_path.label = PARM_LABEL("$SAVE_PATH", "save_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "save_path") LABELREF(save_path.label)
	VALUE(save_path.val) HSTRETCH;

    save_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(save_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

output_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 output_path.label = PARM_LABEL("$OUTPUT_PATH", "output_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "output_path") LABELREF(output_path.label)
	VALUE(output_path.val) HSTRETCH;

    output_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(output_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

cache_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 cache_path.label = PARM_LABEL("$CACHE_PATH", "cache_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "cache_path") LABELREF(cache_path.label)
	VALUE(cache_path.val) HSTRETCH;

    cache_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(cache_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

render_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 render_path.label = PARM_LABEL("$RENDER_PATH", "render_path") WIDTH(1.5);

 PARM_FIELD (pathstring, "render_path") LABELREF(render_path.label)
	VALUE(render_path.val) HSTRETCH;

    render_path.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(render_path.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

folder2.gad = 
GROUP simple "Scene"
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    scene_var.gad;		
	    sepparm2.gad;		
	    scene_path.gad;		
	    save_path.gad;		
	    output_path.gad;		
	    cache_path.gad;		
	    render_path.gad;		
} 

folder1.gad = 
GROUP simple "Project"
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    proj_var.gad;		
	    code_var.gad;		
	    fps.gad;		
	    sepparm.gad;		
	    proj_path.gad;		
	    scenes_path.gad;		
	    hda_path.gad;		
	    scripts_path.gad;		
} 

folder0.gad = 
GROUP simple "Variable"
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    folder1.gad;		
	    folder2.gad;		
} 

stdswitcher3_2.gad = 
GROUP simple "Settings"
{ 
    VALUE(stdswitcher3_2.gad.val) LAYOUT(vertical) HSTRETCH 
	    proj.row.join;		
	    scene.gad;		
} 

stdswitcher3.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 "stdswitcher3.gad"
    { 
	VALUE(stdswitcher3.gad.val) STRETCH(1,0)
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    stdswitcher3_2.gad; 
    folder0.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
